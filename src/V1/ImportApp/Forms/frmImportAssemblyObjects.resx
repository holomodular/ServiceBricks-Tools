<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATU1NAE1NTQZNTU0eTU1NLE1NTSxNTU0sTU1NLE1N
        TSxNTU0sTU1NLE1NTSxNTU0sTU1NLE1NTSxNTU0sTU1NLE1NTSxNTU0sTU1NLE1NTSxNTU0sTU1NLE1N
        TSxNTU0kTU1NC01NTQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABNTU0GTU1NXE1NTbhXV1fijY2N9I+Pj+6Pj4/uj4+P7o+Pj+6Pj4/uj4+P7o+Pj+6Pj4/uj4+P7o+P
        j+6Pj4/uj4+P7o+Pj+6Pj4/uj4+P7o+Pj+6Pj4/uj4+P7o+Pj+6Pj4/ujo6O8GVlZedPT0/HTU1NcU1N
        TQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1NTQBNTU09T09P0qCgoOLm5ubt/Pz8/e/o
        6//v6Ov/7+jr/+/o6//v6Ov//Pv7///////v6Ov/7+jr/+/o6//v6Ov/7+jr/+/o6//v6Ov/7+jr//z7
        +///////7+jr/+/o6//v6Ov/7+jr/+/o6//6+Pn97u7u8bKysuRSUlLcTU1NWE1NTQEAAAAAAAAAAAAA
        AAAAAAAAAAAAAE1NTQBNTU1gcHBw6ufn5+nq4uX+u5am/5hDb/+VNmn/lTZp/5U2af+VNmn/lTZp/821
        v//czdP/ljhq/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af/Jrrn/4NLY/5Y4av+VNmn/lTZp/5U2
        af+VNmn/lz9t/7KFmP/h1Nn/8PDw9IeHh+tNTU2ITU1NAgAAAAAAAAAAAAAAAAAAAABNTU1Le3t78Pb2
        9vTQu8T/ljtr/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+xhJj/sYSY/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/mEFu/8ertv+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/8Cf
        rfz7+vr8l5eX9E1NTXNNTU0AAAAAAAAAAABNTU0UUlJS3u7u7u7g09j6sYSY/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/sYSY/7GEmP+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5hB
        bv/Hq7b/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+YQW7/39HX//Tz8+9wcHDqTU1NMQAA
        AAAbGxsATU1Nh729veHu5+n5ya65/siuuf+xhJj/sYSY/7GEmP/Irrn/zbW//7GEmP+xhJj/sYSY/8iu
        uf/Ntb//sYSY/7GEmP+xhJj/xKaz/821v/+xhJj/sYSY/7GEmP/An63/2MfO/7GEmP+xhJj/sYSY/8Sm
        s//Ru8T/sYSY/7GEmP+xhJj/t5Ch/9jGzf/g09n/2NjY401NTbNNTU0ATU1NBlNTU9/39vbyzbbA/8iu
        uf/Irrn/yK65/8iuuf/Irrn/8uzv//v6+v/Jr7r/yK65/8iuuf/Irrn/yK65/8iuuf/Irrn/yK65//Ls
        7//7+vr/ya+6/8iuuf/Irrn/yK65/8iuuf/Irrn/yK65/8iuuf/y7O//+/r6/8mvuv/Irrn/yK65/8iu
        uf/Irrn/ya65//f19vxxcXHnTU1NH01NTTSWlpbw6+Pn/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/7eO
        oP++nKv6lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+3jqD/zbW//5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/pmyH+syzvv+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af/ZyM//tLS05k1N
        TWNNTU1fuLi46t3O1P+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+xhJj/sYSY/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/sYSY/8iuuf+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5hB
        bv/Hq7b/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/yK65/9bW1u1NTU2OTU1Nbbu7u9/RvMX/lTZp/5Y7
        a/+WO2v/lTZp/5U2af+VNmn/sYSY/7KFmP+VNmn/lTZp/5U2af+WOGr/ljtr/5U2af+VNmn/lTZp/7GE
        mP/Irrn/lTZp/5U2af+VNmn/ljhq/5Y7a/+VNmn/lTZp/5U2af+YQ2//x6u3/5U2af+VNmn/lTZp/5Y4
        av+XPWz/lTZp/8iuuf/b29vfTU1NoE1NTWW6urrk8ezu/9vL0v/u5+r/7ufq/9vL0v/by9L/28vS/+bc
        4P/p4eT/28vS/9vL0v/by9L/6+Lm//Hs7v/by9L/28vS/9vL0v/j1tv/6uHk/9vL0v/by9L/28vS/+vi
        5v/x7O7/28vS/9vL0v/by9L/4tbb/+3m6f/by9L/28vS/9vL0v/n3eH/9PDy/9vL0v/q4uX/2dnZ5U1N
        TZZNTU1CoaGh6+Xa3v+YQW7/4dTZ/+TY3f+YQ2//mEFu/5hBbv+YQW7/mEFu/5hBbv+YQW7/mEFu/9nI
        z//q4uX+mUVw/5hBbv+YQW7/mEFu/5hBbv+YQW7/mEFu/5hBbv/ZyM//6+Lm/5lFcP+YQW7/mEFu/5hB
        bv+YQW7/mEFu/5hBbv+YQW7/1sPK/+ri5f+ZRXD/1sPL/8PDw+9NTU1xTU1NDmNjY+f49/f5nVJ3/7GE
        mP+xhJj/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+xhJj/soSY/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/mENv/8ert/+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5hB
        bv/Hq7b/ljhq/+7n6v+QkJDsTU1NNU1NTQBNTU2i0dHR6M+4wfexhJj/sYSY/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/sYSY/7GEmP+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5hB
        bv/Hq7b/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+YQW7/x6u2/7qVpfzq6ursT09P0E1N
        TQIAAAAATU1NK3BwcOr29PX1zbW//7eQof+YQW7/mEFu/5hBbv+te5H/soWZ/5hBbv+YQW7/mEFu/7eQ
        of+8mKj/mEFu/5hBbv+YQW7/rXuR/7eOoP+YQW7/mEFu/5hBbv+pc4z/ya65/5hBbv+YQW7/mEFu/617
        kf+3jqD/mEFu/5hBbv+YQW7/n1p7/9TByf/08PL+kpKS6E1NTVcAAAAAAAAAAE1NTQBNTU17mpqa6v39
        /fju5+r/28vS/9vL0v/by9L/+PX2//79/f/czNL/28vS/9vL0v/czNL/3MzS/9vL0v/by9L/28vS//j1
        9v/+/v7/3MzS/9vL0v/by9L/28zS/9zM0v/by9L/28vS/9vL0v/49fb//v7+/9zM0v/by9L/28vS/+fd
        4f/////+vLy8301NTa1NTU0CAAAAAAAAAAAAAAAATU1NAk1NTZ6amprp9fT09s21v/+iYYD/lTZp/8Cf
        rf/Ntb//lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af/An63/1cLK/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/t5Ch/9TByf+VNmn/nFF2/8aqtvb39PX3urq65U1NTcVNTU0PAAAAAAAA
        AAAAAAAAAAAAAAAAAABNTU0CTU1Ne3BwcOzS0tLm+Pf3+ebc4Pbk2d3/tIqc+pU2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/sYSY/8iuuf+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5tM
        c/vq4eX/5Nnd//f19v3k5OTuh4eH6k1NTaRNTU0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1N
        TQBNTU0qTU1NomNjY+mgoKDw3Nzc59nIz/6VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/7GE
        mP/Irrn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af/Ntb//5+fn6qqqqudxcXHpTU1NvE1N
        TUVNTU0BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1NTQBNTU0MTU1NSGNj
        Y+X49/f0zbbA/8iuuf/Irrn/28zS+eDT2f/Irrn/yK65/8iuuf/Vwsr/4NPZ/8iuuf/Irrn/yK65/9nI
        z//g09n/yK65/8iuuf/Jrrn/9vT194WFhe9NTU1mTU1NGk1NTQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1NTQBNTU18pKSk5Pj19v63j6D/sYSY/+fe
        4f/18PL/soWZ/7GEmP+xhJj/sYSY/7GEmP+xhJj/sYSY/7GEmP/n3uH/9fDy/7KFmf+yhZn/8uzu/sXF
        xelNTU2nTU1NAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATU1NBU1NTbq/v7/W6uLl/qJhgP+yhZj/t46g/5U2af+VNmn/lTZp/5U2
        af+VNmn/lTZp/5U2af+VNmn/nlV5/8est/+cT3X/3M3T/9vb29xRUVHVTU1NEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABNTU0RTU1NxLy8vOD08PL+0bvE/7GEmP+VNmn/lTZp/5U2af+VNmn/lTZp/5U2af+VNmn/lTZp/5hC
        b//Xxs3/7ufq/tfX1+dQUFDYTU1NJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1NTQ5NTU2qkpKS6u/v
        7+zu5+r9wJ+t/5xSd/6VNmn/lTZp/5U2af+VNmn/mEFu/7uWpv/j2N39+Pj496ysrONPT0/MTU1NIgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATU1NAk1NTVtSUlLao6Oj4+Li4un7+/v37+jr/u/o
        6//v6Ov/7+jr//r4+f3q6urkuLi46mJiYudNTU19TU1NCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATU1NCE1NTVpNTU2zVFRU4IaGhuySkpLck5OT2Y6Oju9XV1fhTU1NwE1N
        TW9NTU0UTU1NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATU1NAE1NTQVNTU0gTU1NM01NTTNNTU0lTU1NCU1NTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAAD//////wAAAP//
        ////AAAA//////8AAAD//////wAAAP//////AAAA/wAAAH8AAAD4AAAAHwAAAPAAAAAHAAAA4AAAAAMA
        AADAAAAAAwAAAIAAAAABAAAAgAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAEAAADAAAAAAQAAAMAAAAADAAAA4AAAAAcA
        AAD4AAAADwAAAP4AAAA/AAAA/4AAAP8AAAD/gAAB/wAAAP/AAAP/AAAA/+AAB/8AAAD/8AAP/wAAAP/8
        AD//AAAA//+B//8AAAD//////wAAAP//////AAAA//////8AAAD//////wAAAP//////AAAA//////8A
        AAA=
</value>
  </data>
</root>